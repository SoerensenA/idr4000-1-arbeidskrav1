select(speed, te_cv, leg_var) %>% # select variables of interest
pivot_wider(names_from = leg_var,
values_from = te_cv) %>% # transform the dataset into wide format
mutate(speed = factor(speed, levels = c("60", # make the vector "speed" into a factor and set new levels
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)", # give the variables more descriptive labels
"120 (deg s<sup>-1</sup>)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>% # arrange the dataset based on the new levels of the"speed" vector
flextable() %>% # transform into a flextable to allow further modifications
set_header_labels(speed = "Protocol",
L_pt = "Peak torque\n (N/m)",
L_ttp = "Time to peak torque\n (seconds)",
R_pt = "Peak torque\n (N/m)",
R_ttp = "Time to peak torque\n (seconds)") %>% # rename # eader labels
add_header_row(values = c("", "Left Leg", "Left Leg", "Right Leg", "Right # eg")) %>% # add a new header row
merge_at(part = "header", i = 1, j = 2:3) %>% # merge left leg together in  the new header row
merge_at(part = "header", i = 1, j = 4:5) %>% print() # merge left leg together in  the new header row
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(leg, variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>% # calculate the limits of agreement for diff scores
mutate(te_cv =  paste0(signif(te, 2), # merge te and cv into one cell
" (",
signif(cv, 2),
"%)"), # merge leg and variable separated with "_"
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>% # ungroup the dataset
select(speed, te_cv, leg_var) %>% # select variables of interest
pivot_wider(names_from = leg_var,
values_from = te_cv) %>% # transform the dataset into wide format
mutate(speed = factor(speed, levels = c("60", # make the vector "speed" into a factor and set new levels
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)", # give the variables more descriptive labels
"120 (deg s<sup>-1</sup>)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>% # arrange the dataset based on the new levels of the"speed" vector
flextable() %>% # transform into a flextable to allow further modifications
set_header_labels(speed = "Protocol",
L_pt = "Peak torque\n (N/m)",
L_ttp = "Time to peak torque\n (seconds)",
R_pt = "Peak torque\n (N/m)",
R_ttp = "Time to peak torque\n (seconds)") %>% # rename # eader labels
add_header_row(values = c("", "Left Leg", "Left Leg", "Right Leg", "Right # eg")) %>% # add a new header row
merge_at(part = "header", i = 1, j = 2:3) %>% # merge left leg together in  the new header row
merge_at(part = "header", i = 1, j = 4:5) %>% # merge left leg together in  the new header row
add_footer_row(values = "All values are presented as typical error # coefficient of variation) based on differences from pre- to posttesting", colwidths = 5) %>% print()# add a footnote to describe what the # alues show
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(leg, variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>% # calculate the limits of agreement for diff scores
mutate(te_cv =  paste0(signif(te, 2), # merge te and cv into one cell
" (",
signif(cv, 2),
"%)"), # merge leg and variable separated with "_"
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>% # ungroup the dataset
select(speed, te_cv, leg_var) %>% # select variables of interest
pivot_wider(names_from = leg_var,
values_from = te_cv) %>% # transform the dataset into wide format
mutate(speed = factor(speed, levels = c("60", # make the vector "speed" into a factor and set new levels
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)", # give the variables more descriptive labels
"120 (deg s<sup>-1</sup>)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>% # arrange the dataset based on the new levels of the"speed" vector
flextable() %>% # transform into a flextable to allow further modifications
set_header_labels(speed = "Protocol",
L_pt = "Peak torque\n (N/m)",
L_ttp = "Time to peak torque\n (seconds)",
R_pt = "Peak torque\n (N/m)",
R_ttp = "Time to peak torque\n (seconds)") %>% # rename # eader labels
add_header_row(values = c("", "Left Leg", "Left Leg", "Right Leg", "Right # eg")) %>% # add a new header row
merge_at(part = "header", i = 1, j = 2:3) %>% # merge left leg together in  the new header row
merge_at(part = "header", i = 1, j = 4:5) %>% # merge left leg together in  the new header row
add_footer_row(values = "All values are presented as typical error # coefficient of variation) based on differences from pre- to posttesting", colwidths = 5) %>% # add a footnote to describe what the # alues show
autofit() %>% print() # use autofit() to tidy up the flextable
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(leg, variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>% print # calculate the limits of agreement for diff scores
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>% print()  # calculate the limits of agreement for diff scores
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
pivot_wider(names_from = variable,
values_from = m:L) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = mean_pt:sd_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = mean_ttp:sd_ttp, label = "Time To Peak Torque\n (seconds)") %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = m_pt:L_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = m_ttp:L_ttp, label = "Time To Peak Torque\n (seconds)") %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = m_pt:L_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = m_ttp:L_ttp, label = "Time To Peak Torque\n (seconds)") %>%
fmt_number(columns = m_pt:L_pt, decimals = 1) %>%
fmt_number(columns = m_ttp:L_ttp, decimals = 2) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = m_pt:L_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = m_ttp:L_ttp, label = "Time To Peak Torque\n (seconds)") %>%
fmt_number(columns = m_pt:L_pt, decimals = 1) %>%
fmt_number(columns = m_ttp:L_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
m_pt = "M",
te_pt = "TE",
cv_pt = "CV",
L_pt = "LoA",
m_pt = "M",
te_pt = "TE",
cv_pt = "CV",
L_pt = "LoA") %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = m_pt:L_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = m_ttp:L_ttp, label = "Time To Peak Torque\n (seconds)") %>%
fmt_number(columns = m_pt:L_pt, decimals = 1) %>%
fmt_number(columns = m_ttp:L_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
m_pt = "M",
te_pt = "TE",
cv_pt = "CV",
L_pt = "LoA",
m_ttp = "M",
te_ttp = "TE",
cv_ttp = "CV",
L_ttp = "LoA") %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = m_pt:L_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = m_ttp:L_ttp, label = "Time To Peak Torque\n (seconds)") %>%
fmt_number(columns = m_pt:L_pt, decimals = 1) %>%
fmt_number(columns = m_ttp:L_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
m_pt = "M",
te_pt = "TE",
cv_pt = "CV",
L_pt = "LoA",
m_ttp = "M",
te_ttp = "TE",
cv_ttp = "CV",
L_ttp = "LoA") %>%
tab_footnote(footnote = "Abbriviations: M, mean; TE, typical error; CV, coefficient of variations; LoA, limits of agreement") %>%
print()
