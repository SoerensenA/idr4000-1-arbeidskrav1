<<<<<<< HEAD
=======
cv_pt = "CV",
L_pt = "LoA",
m_ttp = "M",
te_ttp = "TE",
cv_ttp = "CV",
L_ttp = "LoA") %>%
<<<<<<< HEAD
print()
=======
tab_footnote(footnote = "Abbriviations: M, mean; TE, typical error; CV, coefficient of variations; LoA, limits of agreement")
distribution <- data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
rowwise () %>%
mutate(diff = post - pre,
avg = mean(c(pre, post))) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd,# calculate the limits of agreement for diff scores
mdiff = mean(diff))%>%
ggplot(aes(x = diff)) +
scale_x_continuous(limits = c(-1000, 1000)) +
stat_function(fun = dnorm,
geom = "area",
args = list(mean = sum_stat$msumdiff,
std = sum_stat$sd),
fill = "steelblue") +
>>>>>>> a7bac8128c4a44c6f624910902d00a57d05b089a
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()) +
labs(title = "A t-distribution") +
coord_flip()
<<<<<<< HEAD
distribution
=======
# Chunk 1: setup
#| label: setup
#| include: false
# importing required packages (note: you need to install packages prior til loading them if you do not already have them installed)
library(tidyverse)
library(readxl)
library(flextable)
library(gt)
# importing the dataset with changes to the column types
data <- read_excel("data/humac-data.xlsx") %>%
mutate(pt.120 = as.numeric(pt.120),
ttp.120 = as.numeric(ttp.120),
pt.240 = as.numeric(pt.240),
ttp.240 = as.numeric(ttp.240),
pt.360 = as.numeric(pt.360),
ttp.360 = as.numeric(ttp.360),
pt.480 = as.numeric(pt.480),
ttp.480 = as.numeric(ttp.480),
pt.iso = as.numeric(pt.iso),
ttp.iso = as.numeric(ttp.iso))
# Chunk 2: tbl-descriptive
#| label: tbl-descriptive
#| echo: false
#| message: false
#| warning: false
#| tbl-cap: "Descriptive data from participants"
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
min = min(pre, na.rm = T),
max = max(pre, na.rm = T),
sd = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
pivot_wider(names_from = test, values_from = mean:sd) %>%
select(speed, mean_pt, min_pt, max_pt, sd_pt,
mean_ttp, min_ttp, max_ttp, sd_ttp) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = mean_pt:sd_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = mean_ttp:sd_ttp, label = "Time To Peak Torque\n (seconds)") %>%
fmt_number(columns = mean_pt:sd_pt, decimals = 1) %>%
fmt_number(columns = mean_ttp:sd_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
mean_pt = "Mean",
min_pt = "Min",
max_pt = "Max",
sd_pt = "SD",
mean_ttp = "Mean",
min_ttp = "Min",
max_ttp = "Max",
sd_ttp = "SD")
# Chunk 3: tbl-reliability
#| label: tbl-reliability
#| echo: false
#| message: false
#| warning: false
#| tbl-cap: "Reliability of knee-extension tests"
>>>>>>> eaf947a5fcbcb478633917f0feebdf1e4cd882e6
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = m_pt:L_pt, label = "Peak Torque\n (N/m)") %>%
tab_spanner(columns = m_ttp:L_ttp, label = "Time To Peak Torque\n (seconds)") %>%
fmt_number(columns = m_pt:L_pt, decimals = 1) %>%
fmt_number(columns = m_ttp:L_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
m_pt = "M",
te_pt = "TE",
cv_pt = "CV",
L_pt = "LoA",
m_ttp = "M",
te_ttp = "TE",
cv_ttp = "CV",
L_ttp = "LoA") %>%
<<<<<<< HEAD
tab_footnote(footnote = "Abbriviations: M, mean; TE, typical error; CV, coefficient of variations; LoA, limits of agreement") %>%
print()
=======
tab_footnote(footnote = "Abbriviations: M, mean; TE, typical error; CV, coefficient of variations; LoA, limits of agreement")
# Chunk 4
distribution <- data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
rowwise () %>%
mutate(diff = post - pre,
avg = mean(c(pre, post))) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd,# calculate the limits of agreement for diff scores
mdiff = mean(diff))%>%
ggplot(aes(x = diff)) +
scale_x_continuous(limits = c(-1000, 1000)) +
stat_function(fun = dnorm,
geom = "area",
args = list(mean = sum_stat$msumdiff,
std = sum_stat$sd),
fill = "steelblue") +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank()) +
labs(title = "A t-distribution") +
coord_flip()
library(blandr)
library(cowplot)
>>>>>>> a7bac8128c4a44c6f624910902d00a57d05b089a
bland_altman <- data %>%
select(fp:pt.60) %>%
filter(leg == "R") %>%
pivot_longer(cols = pt.60,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
rowwise () %>%
mutate(diff = post - pre,
avg = mean(c(pre, post))) %>%
ggplot(aes(avg, diff)) +
geom_point() +
scale_y_continuous(limits = c(-1000, 1000)) +
geom_hline(yintercept = sum_stat$mdiff) +
geom_hline(yintercept = sum_stat$mdiff + sum_stat$L) +
geom_hline(yintercept = sum_stat$mdiff - sum_stat$L)  +
labs(x = "Average of both measures",
y = "Difference between measurements",
title = "Bland-Altman plot")
<<<<<<< HEAD
bland_altman
bland_altman <- data %>%
select(fp:pt.60) %>%
filter(leg == "R") %>%
pivot_longer(cols = pt.60,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
rowwise () %>%
mutate(diff = post - pre,
avg = mean(c(pre, post))) %>%
ggplot(aes(avg, diff)) +
geom_point() +
scale_y_continuous(limits = c(-25, 45)) +
geom_hline(yintercept = sum_stat$mdiff) +
geom_hline(yintercept = sum_stat$mdiff + sum_stat$L) +
geom_hline(yintercept = sum_stat$mdiff - sum_stat$L)  +
labs(x = "Average of both measures",
y = "Difference between measurements",
title = "Bland-Altman plot")
bland_altman
plot_grid(bland_altman, distribution, align = "h", nrow = 1, rel_widths = c(1, 0.3))
library(blandr)
library(cowplot)
plot_grid(bland_altman, distribution, align = "h", nrow = 1, rel_widths = c(1, 0.3))
data %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:pt.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>% print()
=======
>>>>>>> eaf947a5fcbcb478633917f0feebdf1e4cd882e6
library(exscidata)
library(tidyverse)
library(exscidata)
data("cyclingstudy")
force(cyclingstudy)
dat <- cyclingstudy %>%
filter(timepoint == "pre") %>%
select(subject, height.T1, VO2.max)
View(dat)
View(cyclingstudy)
mod <- lm(VO2.max ~ height.T1, data = dat)
View(mod)
View(dat)
View(mod)
View(mod)
mod_dat <- data.frame(mod$model,
fitted = mod$fitted.values,
resid = mod$residuals)
View(mod_dat)
mod_dat %>%
ggplot(aes(height.T1, fitted)) + geom_point(size = 3, shape = 21, fill = "steelblue")
mod_dat %>%
ggplot(aes(height.T1, fitted)) + geom_point(size = 4, shape = 21, fill = "steelblue") +
# Add residuals
geom_segment(aes(x = height.T1, xend = height.T1, y = fitted, yend = fitted + resid))
mod_dat %>%
ggplot(aes(height.T1, fitted)) + geom_point(size = 4, shape = 21, fill = "steelblue") +
# Add residuals
geom_segment(aes(x = height.T1, xend = height.T1, y = fitted, yend = fitted + resid)) +
# Add observed values
geom_point(aes(height.T1, VO2.max), shape = 21, fill = "hotpink", size = 4)
mod_dat %>%
ggplot(aes(height.T1, fitted)) + geom_point(size = 4, shape = 21, fill = "steelblue") +
# Add residuals
geom_segment(aes(x = height.T1, xend = height.T1, y = fitted, yend = fitted + resid)) +
# Add observed values
geom_point(aes(height.T1, VO2.max), shape = 21, fill = "hotpink", size = 4) +
# Add the model
annotate(geom = "segment",
x = min(mod_dat$height.T1),
xend = max(mod_dat$height.T1),
y = coef(mod)[1] + coef(mod)[2] * min(mod_dat$height.T1),
yend = coef(mod)[1] + coef(mod)[2] * max(mod_dat$height.T1),
color = "mediumorchid1", size = 1)
mod_dat %>%
ggplot(aes(height.T1, fitted)) + geom_point(size = 4, shape = 21, fill = "steelblue") +
# Add residuals
geom_segment(aes(x = height.T1, xend = height.T1, y = fitted, yend = fitted + resid)) +
# Add observed values
geom_point(aes(height.T1, VO2.max), shape = 21, fill = "hotpink", size = 4) +
# Add the model
annotate(geom = "segment",
x = min(mod_dat$height.T1 = 175),
mod_dat %>%
ggplot(aes(height.T1, fitted)) + geom_point(size = 4, shape = 21, fill = "steelblue") +
# Add residuals
geom_segment(aes(x = height.T1, xend = height.T1, y = fitted, yend = fitted + resid)) +
# Add observed values
geom_point(aes(height.T1, VO2.max), shape = 21, fill = "hotpink", size = 4) +
# Add the model
annotate(geom = "segment",
x = min(mod_dat$height.T1),
xend = max(mod_dat$height.T1),
y = coef(mod)[1] + coef(mod)[2] * min(mod_dat$height.T1),
yend = coef(mod)[1] + coef(mod)[2] * max(mod_dat$height.T1),
color = "mediumorchid1", size = 1) %>%
summarise(mod_dat)
View(mod_dat)
View(mod)
View(mod_dat)
View(dat)
View(mod_dat)
mod_dat %>%
ggplot(aes(height.T1, fitted)) + geom_point(size = 4, shape = 21, fill = "steelblue") +
# Add residuals
geom_segment(aes(x = height.T1, xend = height.T1, y = fitted, yend = fitted + resid)) +
# Add observed values
geom_point(aes(height.T1, VO2.max), shape = 21, fill = "hotpink", size = 4) +
# Add the model
annotate(geom = "segment",
x = min(mod_dat$height.T1),
xend = max(mod_dat$height.T1),
y = coef(mod)[1] + coef(mod)[2] * min(mod_dat$height.T1),
yend = coef(mod)[1] + coef(mod)[2] * max(mod_dat$height.T1),
color = "mediumorchid1", size = 1) %>%
x = 175
mod <- lm(VO2.max ~ height.T1, data = dat) %>%
coef(mod){2} * 10
coef(mod){2} * 10
View(mod)
mod_dat <- data.frame(mod$model,
fitted = mod$fitted.values,
resid = mod$residuals)
coef(mod)[2] * 10
coef(mod)[1] + coef(mod)[2] * 201
library(exscidata); library(tidyverse)
data("cyclingstudy")
# Reduce the data set
dat <- cyclingstudy %>%
filter(timepoint == "pre") %>%
select(subject, height.T1, VO2.max) %>%
mutate(height = if_else(height.T1 > median(height.T1), "tall", "short"),
height = factor(height)) %>%
print()
View(dat)
dat <- lm(VO2.max ~ height, data = dat)
View(dat)
d <- lm(VO2.max ~ height, data = dat)
dat <- lm(VO2.max ~ height, data = dat)
mod <- lm(VO2.max ~ height, data = dat)
View(mod)
# Reduce the data set
dat <- cyclingstudy %>%
filter(timepoint == "pre") %>%
select(subject, height.T1, VO2.max) %>%
mutate(height = if_else(height.T1 > median(height.T1), "tall", "short"),
height = factor(height))
View(dat)
mod <- lm(VO2.max ~ height.T1, data = dat)
View(mod)
mod <- lm(VO2.max ~ height, data = dat)
tall <- coef(mod)[1] + coef(mod) [2]
VO2max.tallgroup <- coef(mod)[1] + coef(mod) [2]
coef(mod)[1] + coef(mod) [2]
contrasts(dat$height)
print()
dat %>%
group_by(height) %>%
summarise(mean = mean(VO2.max)) %>%
print()
summary(mod)
summary(mod)
dat %>%
group_by(height) %>%
summarise(mean = mean(VO2.max)) %>%
summary(dat)
dat %>%
group_by(height) %>%
summarise(mean = mean(VO2.max)) %>%
summary(mod)
mod_dat %>%
ggplot(aes(height, VO2.max)) + geom_point(size = 3, shape = 21, fill = "steelblue")
mod_dat <- data.frame(mod$model,
VO2.max = mod$fitted.values)
mod_dat %>%
ggplot(aes(height, VO2.max)) + geom_point(size = 3, shape = 21, fill = "steelblue")
mod_dat %>%
ggplot(aes(height.T1, VO2.max)) + geom_point(size = 3, shape = 21, fill = "steelblue")
mod_dat %>%
ggplot(aes(height, VO2.max)) + geom_point(size = 3, shape = 21, fill = "steelblue")
library(tidyverse)
library(readxl)
library(flextable)
library(blandr)
library(cowplot)
# importing the dataset with changes to the column types
data <- read_excel("data/humac-data.xlsx") %>%
mutate(pt.120 = as.numeric(pt.120),
ttp.120 = as.numeric(ttp.120),
pt.240 = as.numeric(pt.240),
ttp.240 = as.numeric(ttp.240),
pt.360 = as.numeric(pt.360),
ttp.360 = as.numeric(ttp.360),
pt.480 = as.numeric(pt.480),
ttp.480 = as.numeric(ttp.480),
pt.iso = as.numeric(pt.iso),
ttp.iso = as.numeric(ttp.iso))
>>>>>>> a7bac8128c4a44c6f624910902d00a57d05b089a
View(data)
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
<<<<<<< HEAD
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"))) %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"))) %>% print()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
=======
cols = pt.60:ttp.iso) %>%
>>>>>>> a7bac8128c4a44c6f624910902d00a57d05b089a
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
<<<<<<< HEAD
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point() +
geom_line() +
theme_bw()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point() +
geom_line() +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480")), labels = c("0", "60", "120", "240", "360", "480")) %>%
ggplot(aes(speed, mean)) +
geom_point() +
geom_line() +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point() +
geom_line() +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s)) +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 4) +
geom_line() +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 3,
shape = 21) +
geom_line() +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 2.5) +
geom_line() +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 3) +
geom_line() +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_classic()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_bw() +
theme()
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_bw() +
labs(x = "Speed (deg/s)",
y = "Peak Torque")
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_bw() +
labs(x = "Speed (deg/s)",
y = "Peak Torque") +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
theme_bw() +
labs(x = "Speed (deg/s)",
y = "Peak Torque") +
theme(panel.grid.minor = element_blank(),
panel.grid.minor.y = element_blank())
data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = c(pt.60, pt.120, pt.240,
pt.360, pt.480, pt.iso)) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
s = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
select(-test) %>%
mutate(speed = factor(speed, levels = c("iso", "60", "120", "240", "360", "480"), labels = c("0", "60", "120", "240", "360", "480"))) %>%
ggplot(aes(speed, mean)) +
geom_point(size = 3) +
geom_errorbar(aes(ymin = mean - s, ymax = mean + s), width = 0.2) +
scale_y_continuous(breaks = seq(0, 350, 50)) +
theme_bw() +
labs(x = "Speed (deg/s)",
y = "Peak Torque") +
theme(panel.grid.minor = element_blank(),
panel.grid.minor.y = element_blank())
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = c("variable","speed"),
values_to = "value",
names_sep = "[.]") %>% # transform the dataset into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
ungroup() %>% # ungroup the dataset
select(-sd) %>%
pivot_wider(names_from = variable,
values_from = m:L) %>%
select(speed, m_pt, te_pt, cv_pt, L_pt,
m_ttp, te_ttp, cv_ttp, L_ttp) %>%
mutate(speed = factor(speed, levels = c("60",
"120",
"240",
"360",
"480",
"iso"),
=======
min = min(pre, na.rm = T),
max = max(pre, na.rm = T),
sd = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
pivot_wider(names_from = test, values_from = mean:sd) %>%
select(speed, mean_pt, min_pt, max_pt, sd_pt,
mean_ttp, min_ttp, max_ttp, sd_ttp) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
>>>>>>> a7bac8128c4a44c6f624910902d00a57d05b089a
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
<<<<<<< HEAD
tab_spanner(columns = m_pt:L_pt, label = md("Peak Torque<br> (N/m)")) %>%
tab_spanner(columns = m_ttp:L_ttp, label = md("Time To Peak Torque<br> (seconds)")) %>%
fmt_number(columns = m_pt:L_pt, decimals = 1) %>%
fmt_number(columns = m_ttp:L_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
m_pt = "M",
te_pt = "TE",
cv_pt = "CV",
L_pt = "LoA",
m_ttp = "M",
te_ttp = "TE",
cv_ttp = "CV",
L_ttp = "LoA") %>%
tab_footnote(footnote = "Abbriviations: M, mean; TE, typical error; CV, coefficient of variations; LoA, limits of agreement")
=======
tab_spanner(columns = mean_pt:sd_pt, label = md("Peak Torque<br> (N/m)")) %>%
tab_spanner(columns = mean_ttp:sd_ttp, label = md("Time To Peak Torque<br> (seconds)")) %>%
fmt_number(columns = mean_pt:sd_pt, decimals = 1) %>%
fmt_number(columns = mean_ttp:sd_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
mean_pt = "Mean",
min_pt = "Min",
max_pt = "Max",
sd_pt = "SD",
mean_ttp = "Mean",
min_ttp = "Min",
max_ttp = "Max",
sd_ttp = "SD")
data2 <- data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
min = min(pre, na.rm = T),
max = max(pre, na.rm = T),
sd = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
pivot_wider(names_from = test, values_from = mean:sd) %>%
select(speed, mean_pt, min_pt, max_pt, sd_pt,
mean_ttp, min_ttp, max_ttp, sd_ttp) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = mean_pt:sd_pt, label = md("Peak Torque<br> (N/m)")) %>%
tab_spanner(columns = mean_ttp:sd_ttp, label = md("Time To Peak Torque<br> (seconds)")) %>%
fmt_number(columns = mean_pt:sd_pt, decimals = 1) %>%
fmt_number(columns = mean_ttp:sd_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
mean_pt = "Mean",
min_pt = "Min",
max_pt = "Max",
sd_pt = "SD",
mean_ttp = "Mean",
min_ttp = "Min",
max_ttp = "Max",
sd_ttp = "SD")
data2 <- data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values) %>%
group_by(Test) %>%
summarise(mean = mean(pre, na.rm = T),
min = min(pre, na.rm = T),
max = max(pre, na.rm = T),
sd = sd(pre, na.rm = T)) %>%
ungroup() %>%
separate(Test, into = c("test", "speed")) %>%
pivot_wider(names_from = test, values_from = mean:sd) %>%
select(speed, mean_pt, min_pt, max_pt, sd_pt,
mean_ttp, min_ttp, max_ttp, sd_ttp) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)",
"120 (deg/s)",
"240 (deg/s)",
"360 (deg/s)",
"480 (deg/s)",
"Isometric (60 deg)"))) %>%
arrange(speed) %>%
gt() %>%
tab_spanner(columns = mean_pt:sd_pt, label = md("Peak Torque<br> (N/m)")) %>%
tab_spanner(columns = mean_ttp:sd_ttp, label = md("Time To Peak Torque<br> (seconds)")) %>%
fmt_number(columns = mean_pt:sd_pt, decimals = 1) %>%
fmt_number(columns = mean_ttp:sd_ttp, decimals = 2) %>%
cols_label(speed = "Protocol",
mean_pt = "Mean",
min_pt = "Min",
max_pt = "Max",
sd_pt = "SD",
mean_ttp = "Mean",
min_ttp = "Min",
max_ttp = "Max",
sd_ttp = "SD")
View(data)
data2 <- data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso)
View(data2)
data2 <- data %>%
pivot_longer(names_to = "Test",
values_to = "values",
cols = pt.60:ttp.iso) %>%
pivot_wider(names_from = timepoint,
values_from = values)
View(data2)
>>>>>>> a7bac8128c4a44c6f624910902d00a57d05b089a
