names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>% print()
tab <- data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
print()
tab <- data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60", "120", "240", "360", "480", "isometric"))) %>%
print()
tab <- data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60", "120", "240", "360", "480", "isometric"))) %>%
arrange(speed) %>%
print()
library(flextable)
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60", "120", "240", "360", "480", "isometric"))) %>%
arrange(speed) %>%
flextable() %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque",
L_ttp = "Time to peak torque",
R_pt = "Peak torque",
R_ttp = "Time to peak torque",) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque",
L_ttp = "Time to peak torque",
R_pt = "Peak torque",
R_ttp = "Time to peak torque") %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric (60 deg)"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque",
L_ttp = "Time to peak torque",
R_pt = "Peak torque",
R_ttp = "Time to peak torque") %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric (60 deg)"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque",
L_ttp = "Time to peak torque",
R_pt = "Peak torque",
R_ttp = "Time to peak torque") %>%
add_header_row(values = c("", "Left", "Left", "Right", "Right")) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric (60 deg)"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque",
L_ttp = "Time to peak torque",
R_pt = "Peak torque",
R_ttp = "Time to peak torque") %>%
add_header_row(values = c("", "Left", "Left", "Right", "Right")) %>%
merge_at(part = "header", i = 1, j = 2:3) %>%
merge_at(part = "header", i = 1, j = 4:5) %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric (60 deg)"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque",
L_ttp = "Time to peak torque",
R_pt = "Peak torque",
R_ttp = "Time to peak torque") %>%
add_header_row(values = c("", "Left", "Left", "Right", "Right")) %>%
merge_at(part = "header", i = 1, j = 2:3) %>%
merge_at(part = "header", i = 1, j = 4:5) %>%
add_footer_row(values = "Values are typical error and (coefficient of variation", colwidths = 5) %>%
autofit() %>%
print()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric (60 deg)"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque",
L_ttp = "Time to peak torque\n (s)",
R_pt = "Peak torque",
R_ttp = "Time to peak torque") %>%
add_header_row(values = c("", "Left", "Left", "Right", "Right")) %>%
merge_at(part = "header", i = 1, j = 2:3) %>%
merge_at(part = "header", i = 1, j = 4:5) %>%
add_footer_row(values = "All values are presented as typical error (coefficient of variation)", colwidths = 5) %>%
autofit()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>%
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>%
pivot_wider(names_from = variable,
values_from = values) %>%
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>%
pivot_wider(names_from = timepoint,
values_from = value) %>%
mutate(diff = post - pre) %>%
group_by(leg, variable, speed) %>%
summarise(m = mean(c(pre, post), na.rm = T),
sd = sd(diff, na.rm = T),
te = sd / sqrt(2),
cv = 100 * (te / m),
L = qt(0.975, 4) * sd) %>%
mutate(te_cv =  paste0(signif(te, 2),
" (",
signif(cv, 2),
")"),
leg_var = paste(leg, variable, sep = "_")) %>%
ungroup() %>%
select(speed, te_cv, leg_var) %>%
pivot_wider(names_from = leg_var,
values_from = te_cv) %>%
mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
labels = c("60 (deg/s)", "120 (deg/s)", "240 (deg/s)", "360 (deg/s)", "480 (deg/s)", "isometric (60 deg)"))) %>%
arrange(speed) %>%
flextable() %>%
set_header_labels(speed = "",
L_pt = "Peak torque\n (N/m)",
L_ttp = "Time to peak torque\n (seconds)",
R_pt = "Peak torque\n (N/m)",
R_ttp = "Time to peak torque\n (seconds)") %>%
add_header_row(values = c("", "Left Leg", "Left Leg", "Right Leg", "Right Leg")) %>%
merge_at(part = "header", i = 1, j = 2:3) %>%
merge_at(part = "header", i = 1, j = 4:5) %>%
add_footer_row(values = "All values are presented as typical error (coefficient of variation)", colwidths = 5) %>%
autofit()
data %>%
pivot_longer(cols = pt.60:ttp.iso,
names_to = "variable",
values_to = "values") %>% # make the dataset into long format
mutate(variable = gsub("pt.", "pt_", variable),
variable = gsub("ttp.", "ttp_", variable)) %>% # separate variable strings with "_" instead of "."
pivot_wider(names_from = variable,
values_from = values) %>% # pivot back to wide format with the new separator
pivot_longer(cols = pt_60:ttp_iso,
names_to = c("variable", "speed"),
names_sep = "_",
values_to = "value") %>% # use the new separator to split the "variable" into "variable" and "speed" and transform into long format
pivot_wider(names_from = timepoint,
values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
group_by(leg, variable, speed) %>% # make a grouped dataset based on leg, variable and speed
summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores
te = sd / sqrt(2), # calculate the typical error of the diff scores
cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
L = qt(0.975, 4) * sd) %>% print() # calculate the limits of agreement for diff scores
install.packages("gt")
install.packages("gt_tbl")
