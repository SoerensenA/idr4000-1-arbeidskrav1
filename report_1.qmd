---
title: "Reliability of knee-extension tests"
format: html
editor_options: 
  chunk_output_type: console
---

## Testprotokoll
Deltakeren starter med 7 min oppvarming på sykkel med 4 minutter på BORG -, 2 min på BORG - og 1 min BORG-. Testen gjøres unilateralt og starter med høgre ben. Deltakeren utfører isokinetisk kneeksentsjon på hastighetene, 60, 120, 240, 360 og 480 grader/sek og avslutter med en isometrisk ekstensjon på en vinkel på 60 grader. Deltakeren har tre førsok på isokinetiske tester og to forsøk på isometrisk hvor den beste gjennomføringen blir gjeldende. Etter gjennomføring blir testen gjentatt på venstre bein. 

## Standardisering

### Før test

Deltakere skal ha tilnærmet likt kosthold, søvn og aktivitetsnivå 24 timer før test. Det skal ikke inntas koffein eller nikotin  på testdag. Setet blir stilt inn før første test og de samme innstillingene blir brukt på andre test. Deltaker skal sitte inntil ryggstøtten og med plass til to fingre mellom mellom knehasen og setet på stolen. Rotasjonsaksen i kneleddet skal være parallelt til dreieaksen i dynamometeret. Motstandsarmen blir festet på testbenet ovenfor malleolus. På testbenet blir låret festet med belte og et belte over magen for å forhindre uønskede bevegelser. 

### Under test
Deltaker får muntlig tilbakemeldinger under gjennomføring. 


```{r}
#| label: setup
#| include: false

# importing required packages (note: you need to install packages prior til loading them if you do not already have them installed)
library(tidyverse)
library(readxl)
library(flextable)
library(gt)


# importing the dataset with changes to the column types
data <- read_excel("data/humac-data.xlsx") %>% 
  mutate(pt.120 = as.numeric(pt.120),
         ttp.120 = as.numeric(ttp.120),
         pt.240 = as.numeric(pt.240),
         ttp.240 = as.numeric(ttp.240),
         pt.360 = as.numeric(pt.360),
         ttp.360 = as.numeric(ttp.360),
         pt.480 = as.numeric(pt.480),
         ttp.480 = as.numeric(ttp.480),
         pt.iso = as.numeric(pt.iso),
         ttp.iso = as.numeric(ttp.iso))
```

```{r}
#| label: tbl-descriptive
#| echo: false
#| message: false
#| warning: false
#| tbl-cap: "Descriptive data from participants"

data %>% 
  pivot_longer(names_to = "Test",
               values_to = "values",
               cols = pt.60:ttp.iso) %>% 
  pivot_wider(names_from = timepoint,
              values_from = values) %>% 
  group_by(Test) %>%
  summarise(mean = mean(pre, na.rm = T),
            min = min(pre, na.rm = T),
            max = max(pre, na.rm = T),
            sd = sd(pre, na.rm = T)) %>%
  ungroup() %>%
  separate(Test, into = c("test", "speed")) %>%
  pivot_wider(names_from = test, values_from = mean:sd) %>%
  select(speed, mean_pt, min_pt, max_pt, sd_pt, 
         mean_ttp, min_ttp, max_ttp, sd_ttp) %>%
  mutate(speed = factor(speed, levels = c("60", "120", "240", "360", "480", "iso"),
                        labels = c("60 (deg/s)", 
                                   "120 (deg/s)", 
                                   "240 (deg/s)", 
                                   "360 (deg/s)", 
                                   "480 (deg/s)", 
                                   "Isometric (60 deg)"))) %>%
  arrange(speed) %>% 
   gt() %>%
  tab_spanner(columns = mean_pt:sd_pt, label = "Peak Torque\n (N/m)") %>%
  tab_spanner(columns = mean_ttp:sd_ttp, label = "Time To Peak Torque\n (seconds)") %>%
  fmt_number(columns = mean_pt:sd_pt, decimals = 1) %>%
  fmt_number(columns = mean_ttp:sd_ttp, decimals = 2) %>%
  cols_label(speed = "Protocol",
             mean_pt = "Mean",
             min_pt = "Min",
             max_pt = "Max",
             sd_pt = "SD",
             mean_ttp = "Mean",
             min_ttp = "Min",
             max_ttp = "Max",
             sd_ttp = "SD")
  
  

```

```{r}
#| label: tbl-reliability
#| echo: false
#| message: false
#| warning: false
#| tbl-cap: "Reliability of knee-extension tests"


data %>% 
  pivot_longer(cols = pt.60:ttp.iso,
               names_to = c("variable","speed"),
               values_to = "value", 
               names_sep = "[.]") %>% # transform the dataset into long format
  pivot_wider(names_from = timepoint,
              values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
  mutate(diff = post - pre) %>% # make a new column named "diff" with differences scores
  group_by(variable, speed) %>% # make a grouped dataset based on leg, variable and speed
  summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
            sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores 
            te = sd / sqrt(2), # calculate the typical error of the diff scores
            cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
            L = qt(0.975, 4) * sd) %>%  # calculate the limits of agreement for diff scores
  ungroup() %>% # ungroup the dataset
  select(-sd) %>% 
  pivot_wider(names_from = variable, 
              values_from = m:L) %>% 
  select(speed, m_pt, te_pt, cv_pt, L_pt,
         m_ttp, te_ttp, cv_ttp, L_ttp) %>% 
  mutate(speed = factor(speed, levels = c("60",
                                          "120", 
                                          "240", 
                                          "360", 
                                          "480", 
                                          "iso"),
                        labels = c("60 (deg/s)", 
                                   "120 (deg/s)", 
                                   "240 (deg/s)", 
                                   "360 (deg/s)", 
                                   "480 (deg/s)", 
                                   "Isometric (60 deg)"))) %>%
  arrange(speed) %>%
  gt() %>% 
  tab_spanner(columns = m_pt:L_pt, label = "Peak Torque\n (N/m)") %>%
  tab_spanner(columns = m_ttp:L_ttp, label = "Time To Peak Torque\n (seconds)") %>% 
  fmt_number(columns = m_pt:L_pt, decimals = 1) %>% 
  fmt_number(columns = m_ttp:L_ttp, decimals = 2) %>% 
  cols_label(speed = "Protocol",
             m_pt = "M",
             te_pt = "TE",
             cv_pt = "CV",
             L_pt = "LoA",
             m_ttp = "M",
             te_ttp = "TE",
             cv_ttp = "CV",
             L_ttp = "LoA") %>% 
  tab_footnote(footnote = "Abbriviations: M, mean; TE, typical error; CV, coefficient of variations; LoA, limits of agreement")
   
```



```{r}
#| label: sumstat
#| echo: false
#| message: false
#| warning: false

sum_stat <- data %>%
 pivot_longer(cols = pt.60:ttp.iso,
               names_to = c("variable","speed"),
               values_to = "value", 
               names_sep = "[.]") %>% # transform the dataset into long format
  pivot_wider(names_from = timepoint,
              values_from = value) %>% # transform the dataset back to wide format for easy calculations of differences from pre to post
  mutate(diff = post - pre) %>%
 summarise(m = mean(c(pre, post), na.rm = T), # calculate the average score from both pre and post testing
            sd = sd(diff, na.rm = T), # calculate the standard divination of the diff scores 
            te = sd / sqrt(2), # calculate the typical error of the diff scores
            cv = 100 * (te / m), # calculate the relative typical error (coefficient of variation)
            L = qt(0.975, 4) * sd,# calculate the limits of agreement for diff scores
            mdiff = mean(diff, na.rm = T)) 

```




```{r}
#| label: tdistribution
#| echo: false
#| message: false
#| warning: false


distribution <- data %>% 
  rowwise () %>%
  pivot_longer(cols = pt.60:ttp.iso,
               names_to = c("variable","speed"),
               values_to = "value", 
               names_sep = "[.]") %>% # transform the dataset into long format
  pivot_wider(names_from = timepoint,
              values_from = value) %>%
  mutate(avg = mean(c(pre, post), na.rm = T),
         diff = post - pre) %>% # make a new column named "diff" with differences scores
  
        ggplot(aes(x = diff)) +
        scale_x_continuous(limits = c(-50, 50)) +
        stat_function(fun = dnorm, 
                      geom = "area",
                      args = list(mean = sum_stat$mdiff, 
                                               sd = sum_stat$sd), 
                      fill = "steelblue") +
        
        theme(axis.text = element_blank(), 
              axis.title = element_blank(), 
              axis.ticks = element_blank(), 
              panel.grid = element_blank()) + 
        labs(title = "A t-distribution") +
        coord_flip()



```

```{r}
#| label: BlandAltman
#| echo: false
#| message: false
#| warning: false

library(blandr)
library(cowplot)
bland_altman <- data %>%
        rowwise() %>%
  pivot_longer(cols = pt.60:ttp.iso,
               names_to = c("variable","speed"),
               values_to = "value", 
               names_sep = "[.]") %>% # transform the dataset into long format
   pivot_wider(names_from = timepoint,
              values_from = value) %>%
        mutate(diff = post - pre, 
               avg = mean(c(pre, post), na.rm = T),
               mdiff = mean(diff, na.rm = T)) %>%
        ggplot(aes(avg, diff)) + 
        
        geom_point() +
        scale_y_continuous(limits = c(-50, 50)) +
        
        geom_hline(yintercept = sum_stat$mdiff) + 
        
        geom_hline(yintercept = sum_stat$mdiff + sum_stat$L) + 
        geom_hline(yintercept = sum_stat$mdiff - sum_stat$L)  +
        labs(x = "Average of both measures", 
             y = "Difference between measurements", 
             title = "Bland-Altman plot")



plot_grid(bland_altman, distribution, align = "h", nrow = 1, rel_widths = c(1, 0.3))
```
